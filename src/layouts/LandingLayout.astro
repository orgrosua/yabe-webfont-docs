---
import type { CollectionEntry } from 'astro:content';
import HeadCommon from '../components/HeadCommon.astro';
import HeadSEO from '../components/HeadSEO.astro';
import Landing from '../components/Landing.vue';
import { normalizeLangTag } from '../i18n/bcp-normalize';
import { rtlLanguages } from '../i18n/languages';
import { useTranslations } from '../i18n/util';
import { getLanguageFromURL } from '../util';

export interface Props {
	content: CollectionEntry<'docs'>['data'];
}

// const { content } = Astro.props;

const content = {
	title: `The GDPR-friendly Font Plugin for WordPress â€” Yabe Webfont`,
	description:
		'Easily self-host Google Fonts and manage custom fonts with seamless integration into WordPress page builders.',
	lang: 'en-us',
	dir: 'ltr',
};

const isFallback = !!Astro.params.fallback;
const url = Astro.url;
const lang = getLanguageFromURL(url.pathname);
const direction = rtlLanguages.has(lang) ? 'rtl' : 'ltr';
const bcpLang = normalizeLangTag(lang);
const currentPage = url.pathname;
const t = useTranslations(Astro);
const formatTitle = (content: { title?: string }) =>
	content.title ? `${content.title}` : t('site.title');
// Ensures the canonicalURL always has a trailing slash.
const canonicalURL = new URL(Astro.url.pathname.replace(/([^/])$/, '$1/'), Astro.site);
if (isFallback) canonicalURL.pathname = canonicalURL.pathname.replace(`/${lang}/`, '/en/');
---

<html dir={direction} lang={bcpLang} class="initial">
	<head>
		<HeadCommon />
		<HeadSEO content={content} canonicalURL={canonicalURL} />
		<title set:html={formatTitle(content)} />
	</head>

	<body>
		<Landing client:only="vue" />
	</body>
</html>
